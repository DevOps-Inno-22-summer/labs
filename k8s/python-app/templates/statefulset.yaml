apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "python-app.fullname" . }}
  labels:
    {{- include "python-app.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "python-app.fullname" . }}
  podManagementPolicy: "Parallel"
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "python-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "python-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "python-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: appid
            valueFrom:
              secretKeyRef:
                name: appid
                key: appid
          - name: LABS_REMAINING
            value: "TWO"
          volumeMounts:
            - name: visits
              mountPath: /home/app/data/
            - name: init-container-vol
              mountPath: /init
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: init-container
          image: busybox
          command: [ "wget", "-O", "/init/simple.html", "https://dataquestio.github.io/web-scraping-pages/simple.html" ]
          volumeMounts:
            - name: init-container-vol
              mountPath: /init
      volumes:
        - name: init-container-vol
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: visits
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 128M