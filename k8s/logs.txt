* 
* ==> Audit <==
* |--------------------|---------------------|----------|-----------------|---------|---------------------|---------------------|
|      Command       |        Args         | Profile  |      User       | Version |     Start Time      |      End Time       |
|--------------------|---------------------|----------|-----------------|---------|---------------------|---------------------|
| start              |                     | minikube | antonzalaldinov | v1.26.0 | 28 Jun 22 07:14 MSK | 28 Jun 22 07:18 MSK |
| service            | hello-node          | minikube | antonzalaldinov | v1.26.0 | 28 Jun 22 07:21 MSK | 28 Jun 22 07:22 MSK |
| service            | --all               | minikube | antonzalaldinov | v1.26.0 | 28 Jun 22 07:39 MSK | 28 Jun 22 07:48 MSK |
| service            | --all               | minikube | antonzalaldinov | v1.26.0 | 28 Jun 22 07:50 MSK | 28 Jun 22 07:54 MSK |
| dashboard          |                     | minikube | antonzalaldinov | v1.26.0 | 28 Jun 22 08:05 MSK |                     |
| moscow-time-viewer |                     | minikube | antonzalaldinov | v1.26.0 | 28 Jun 22 08:14 MSK |                     |
| moscow-time-viewer |                     | minikube | antonzalaldinov | v1.26.0 | 28 Jun 22 08:14 MSK |                     |
| start              | --vm-driver=“docker | minikube | antonzalaldinov | v1.26.0 | 05 Jul 22 06:47 MSK |                     |
| start              |                     | minikube | antonzalaldinov | v1.26.0 | 05 Jul 22 06:52 MSK |                     |
| start              |                     | minikube | antonzalaldinov | v1.26.0 | 05 Jul 22 06:54 MSK |                     |
| start              |                     | minikube | antonzalaldinov | v1.26.0 | 05 Jul 22 06:56 MSK |                     |
| delete             |                     | minikube | antonzalaldinov | v1.26.0 | 05 Jul 22 06:58 MSK | 05 Jul 22 06:58 MSK |
| start              |                     | minikube | antonzalaldinov | v1.26.0 | 05 Jul 22 06:58 MSK |                     |
|--------------------|---------------------|----------|-----------------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2022/07/05 06:58:35
Running on machine: Antons-MacBook-Pro
Binary: Built with gc go1.18.3 for darwin/arm64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0705 06:58:35.854939    8486 out.go:296] Setting OutFile to fd 1 ...
I0705 06:58:35.855114    8486 out.go:348] isatty.IsTerminal(1) = true
I0705 06:58:35.855116    8486 out.go:309] Setting ErrFile to fd 2...
I0705 06:58:35.855119    8486 out.go:348] isatty.IsTerminal(2) = true
I0705 06:58:35.855331    8486 root.go:329] Updating PATH: /Users/antonzalaldinov/.minikube/bin
I0705 06:58:35.855550    8486 out.go:303] Setting JSON to false
I0705 06:58:35.876967    8486 start.go:115] hostinfo: {"hostname":"Antons-MacBook-Pro.local","uptime":1456,"bootTime":1656992059,"procs":552,"os":"darwin","platform":"darwin","platformFamily":"Standalone Workstation","platformVersion":"13.0","kernelVersion":"22.0.0","kernelArch":"arm64","virtualizationSystem":"","virtualizationRole":"","hostId":"29485cd7-e741-5f6e-8088-91a4398f4256"}
W0705 06:58:35.877079    8486 start.go:123] gopshost.Virtualization returned error: not implemented yet
I0705 06:58:35.883611    8486 out.go:177] 😄  minikube v1.26.0 on Darwin 13.0 (arm64)
I0705 06:58:35.885179    8486 notify.go:193] Checking for updates...
I0705 06:58:35.888490    8486 out.go:177]     ▪ KUBECONFIG=/etc/kubernetes/admin.conf
I0705 06:58:35.893709    8486 driver.go:360] Setting default libvirt URI to qemu:///system
I0705 06:58:35.893738    8486 global.go:111] Querying for installed drivers using PATH=/Users/antonzalaldinov/.minikube/bin:/Users/antonzalaldinov/yandex-cloud/bin:/usr/local/share/npm/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/antonzalaldinov/yandex-cloud/bin:/usr/local/share/npm/bin:/opt/homebrew/bin:/opt/homebrew/sbin
I0705 06:58:35.974481    8486 docker.go:137] docker version: linux-20.10.17
I0705 06:58:35.974611    8486 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0705 06:58:36.101313    8486 info.go:265] docker info: {ID:PQPG:6NWG:MTOJ:4D7U:TFBE:LVXH:HXMU:RRWW:JVQ3:PMV3:DT5F:J4V5 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:53 OomKillDisable:false NGoroutines:52 SystemTime:2022-07-05 03:58:36.029609508 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:4 KernelVersion:5.10.104-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:5 MemTotal:8232747008 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.17 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:10c12954828e7c7c9b6e0ea9b0c02b01407d3ae1 Expected:10c12954828e7c7c9b6e0ea9b0c02b01407d3ae1} RuncCommit:{ID:v1.1.2-0-ga916309 Expected:v1.1.2-0-ga916309} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.8.2] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.6.1] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.7] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.17.0]] Warnings:<nil>}}
I0705 06:58:36.101386    8486 global.go:119] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0705 06:58:36.101526    8486 global.go:119] hyperkit default: true priority: 8, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "hyperkit": executable file not found in $PATH Reason: Fix:Run 'brew install hyperkit' Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/hyperkit/ Version:}
I0705 06:58:36.101586    8486 global.go:119] podman default: true priority: 3, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "podman": executable file not found in $PATH Reason: Fix:Install Podman Doc:https://minikube.sigs.k8s.io/docs/drivers/podman/ Version:}
I0705 06:58:36.101590    8486 global.go:119] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0705 06:58:36.101651    8486 global.go:119] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/ Version:}
I0705 06:58:36.101706    8486 global.go:119] vmware default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "docker-machine-driver-vmware": executable file not found in $PATH Reason: Fix:Install docker-machine-driver-vmware Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ Version:}
I0705 06:58:36.101750    8486 global.go:119] parallels default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "prlctl": executable file not found in $PATH Reason: Fix:Install Parallels Desktop for Mac Doc:https://minikube.sigs.k8s.io/docs/drivers/parallels/ Version:}
I0705 06:58:36.101802    8486 global.go:119] qemu2 default: true priority: 3, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "qemu-system-aarch64": executable file not found in $PATH Reason: Fix:Install qemu-system Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/qemu2/ Version:}
I0705 06:58:36.101805    8486 global.go:119] vmwarefusion default: false priority: 1, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:the 'vmwarefusion' driver is no longer available Reason: Fix:Switch to the newer 'vmware' driver by using '--driver=vmware'. This may require first deleting your existing cluster Doc:https://minikube.sigs.k8s.io/docs/drivers/vmware/ Version:}
I0705 06:58:36.101814    8486 driver.go:295] not recommending "ssh" due to default: false
I0705 06:58:36.101819    8486 driver.go:330] Picked: docker
I0705 06:58:36.101821    8486 driver.go:331] Alternatives: [ssh]
I0705 06:58:36.101823    8486 driver.go:332] Rejects: [hyperkit podman virtualbox vmware parallels qemu2 vmwarefusion]
I0705 06:58:36.111084    8486 out.go:177] ✨  Automatically selected the docker driver
I0705 06:58:36.116033    8486 start.go:284] selected driver: docker
I0705 06:58:36.116043    8486 start.go:805] validating driver "docker" against <nil>
I0705 06:58:36.116053    8486 start.go:816] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0705 06:58:36.116127    8486 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0705 06:58:36.246588    8486 info.go:265] docker info: {ID:PQPG:6NWG:MTOJ:4D7U:TFBE:LVXH:HXMU:RRWW:JVQ3:PMV3:DT5F:J4V5 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:53 OomKillDisable:false NGoroutines:52 SystemTime:2022-07-05 03:58:36.177539924 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:4 KernelVersion:5.10.104-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:5 MemTotal:8232747008 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.17 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:10c12954828e7c7c9b6e0ea9b0c02b01407d3ae1 Expected:10c12954828e7c7c9b6e0ea9b0c02b01407d3ae1} RuncCommit:{ID:v1.1.2-0-ga916309 Expected:v1.1.2-0-ga916309} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.8.2] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.6.1] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.7] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.17.0]] Warnings:<nil>}}
I0705 06:58:36.246691    8486 start_flags.go:296] no existing cluster config was found, will generate one from the flags 
I0705 06:58:36.248908    8486 start_flags.go:377] Using suggested 7803MB memory alloc based on sys=65536MB, container=7851MB
I0705 06:58:36.248979    8486 start_flags.go:835] Wait components to verify : map[apiserver:true system_pods:true]
I0705 06:58:36.254474    8486 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0705 06:58:36.258185    8486 cni.go:95] Creating CNI manager for ""
I0705 06:58:36.258206    8486 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0705 06:58:36.258213    8486 start_flags.go:310] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.32@sha256:9190bd2393eae887316c97a74370b7d5dad8f0b2ef91ac2662bc36f7ef8e0b95 Memory:7803 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.1 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:}
I0705 06:58:36.267237    8486 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0705 06:58:36.271349    8486 cache.go:120] Beginning downloading kic base image for docker with docker
I0705 06:58:36.274360    8486 out.go:177] 🚜  Pulling base image ...
I0705 06:58:36.282319    8486 preload.go:132] Checking if preload exists for k8s version v1.24.1 and runtime docker
I0705 06:58:36.282337    8486 image.go:75] Checking for gcr.io/k8s-minikube/kicbase:v0.0.32@sha256:9190bd2393eae887316c97a74370b7d5dad8f0b2ef91ac2662bc36f7ef8e0b95 in local docker daemon
I0705 06:58:36.282360    8486 preload.go:148] Found local preload: /Users/antonzalaldinov/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.24.1-docker-overlay2-arm64.tar.lz4
I0705 06:58:36.282368    8486 cache.go:57] Caching tarball of preloaded images
I0705 06:58:36.282497    8486 preload.go:174] Found /Users/antonzalaldinov/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.24.1-docker-overlay2-arm64.tar.lz4 in cache, skipping download
I0705 06:58:36.282504    8486 cache.go:60] Finished verifying existence of preloaded tar for  v1.24.1 on docker
I0705 06:58:36.284735    8486 profile.go:148] Saving config to /Users/antonzalaldinov/.minikube/profiles/minikube/config.json ...
I0705 06:58:36.284782    8486 lock.go:35] WriteFile acquiring /Users/antonzalaldinov/.minikube/profiles/minikube/config.json: {Name:mk232acad053d040f220da4b2f128384c5b5ef03 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0705 06:58:36.349896    8486 image.go:79] Found gcr.io/k8s-minikube/kicbase:v0.0.32@sha256:9190bd2393eae887316c97a74370b7d5dad8f0b2ef91ac2662bc36f7ef8e0b95 in local docker daemon, skipping pull
I0705 06:58:36.349917    8486 cache.go:142] gcr.io/k8s-minikube/kicbase:v0.0.32@sha256:9190bd2393eae887316c97a74370b7d5dad8f0b2ef91ac2662bc36f7ef8e0b95 exists in daemon, skipping load
I0705 06:58:36.349924    8486 cache.go:208] Successfully downloaded all kic artifacts
I0705 06:58:36.349947    8486 start.go:352] acquiring machines lock for minikube: {Name:mk7a2e4ed2db12158b9fe2f4c1ceea50e4549dce Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0705 06:58:36.350015    8486 start.go:356] acquired machines lock for "minikube" in 59.833µs
I0705 06:58:36.350037    8486 start.go:91] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.32@sha256:9190bd2393eae887316c97a74370b7d5dad8f0b2ef91ac2662bc36f7ef8e0b95 Memory:7803 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.1 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.24.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:} &{Name: IP: Port:8443 KubernetesVersion:v1.24.1 ContainerRuntime:docker ControlPlane:true Worker:true}
I0705 06:58:36.350087    8486 start.go:131] createHost starting for "" (driver="docker")
I0705 06:58:36.359457    8486 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=7803MB) ...
I0705 06:58:36.359606    8486 start.go:165] libmachine.API.Create for "minikube" (driver="docker")
I0705 06:58:36.359617    8486 client.go:168] LocalClient.Create starting
I0705 06:58:36.359672    8486 main.go:134] libmachine: Reading certificate data from /Users/antonzalaldinov/.minikube/certs/ca.pem
I0705 06:58:36.359698    8486 main.go:134] libmachine: Decoding PEM data...
I0705 06:58:36.359712    8486 main.go:134] libmachine: Parsing certificate...
I0705 06:58:36.359752    8486 main.go:134] libmachine: Reading certificate data from /Users/antonzalaldinov/.minikube/certs/cert.pem
I0705 06:58:36.359772    8486 main.go:134] libmachine: Decoding PEM data...
I0705 06:58:36.359776    8486 main.go:134] libmachine: Parsing certificate...
I0705 06:58:36.360069    8486 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0705 06:58:36.432831    8486 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0705 06:58:36.432955    8486 network_create.go:272] running [docker network inspect minikube] to gather additional debugging logs...
I0705 06:58:36.432969    8486 cli_runner.go:164] Run: docker network inspect minikube
W0705 06:58:36.495681    8486 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0705 06:58:36.495726    8486 network_create.go:275] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error: No such network: minikube
I0705 06:58:36.495735    8486 network_create.go:277] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error: No such network: minikube

** /stderr **
I0705 06:58:36.495848    8486 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0705 06:58:36.551883    8486 network.go:288] reserving subnet 192.168.49.0 for 1m0s: &{mu:{state:0 sema:0} read:{v:{m:map[] amended:true}} dirty:map[192.168.49.0:0x14000adc958] misses:0}
I0705 06:58:36.551915    8486 network.go:235] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:}}
I0705 06:58:36.551925    8486 network_create.go:115] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0705 06:58:36.552002    8486 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0705 06:58:36.665132    8486 network_create.go:99] docker network minikube 192.168.49.0/24 created
I0705 06:58:36.665165    8486 kic.go:106] calculated static IP "192.168.49.2" for the "minikube" container
I0705 06:58:36.665288    8486 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0705 06:58:36.724416    8486 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0705 06:58:36.781285    8486 oci.go:103] Successfully created a docker volume minikube
I0705 06:58:36.781390    8486 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.32@sha256:9190bd2393eae887316c97a74370b7d5dad8f0b2ef91ac2662bc36f7ef8e0b95 -d /var/lib
I0705 06:58:37.173185    8486 oci.go:107] Successfully prepared a docker volume minikube
I0705 06:58:37.173222    8486 preload.go:132] Checking if preload exists for k8s version v1.24.1 and runtime docker
I0705 06:58:37.173231    8486 kic.go:179] Starting extracting preloaded images to volume ...
I0705 06:58:37.173370    8486 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /Users/antonzalaldinov/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.24.1-docker-overlay2-arm64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.32@sha256:9190bd2393eae887316c97a74370b7d5dad8f0b2ef91ac2662bc36f7ef8e0b95 -I lz4 -xf /preloaded.tar -C /extractDir
I0705 06:58:48.661032    8486 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /Users/antonzalaldinov/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.24.1-docker-overlay2-arm64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.32@sha256:9190bd2393eae887316c97a74370b7d5dad8f0b2ef91ac2662bc36f7ef8e0b95 -I lz4 -xf /preloaded.tar -C /extractDir: (11.487327583s)
I0705 06:58:48.661064    8486 kic.go:188] duration metric: took 11.487609 seconds to extract preloaded images to volume
I0705 06:58:48.661282    8486 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0705 06:58:48.793280    8486 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=7803mb --memory-swap=7803mb --cpus=2 -e container=docker --expose 8443 --publish=8443 --publish=22 --publish=2376 --publish=5000 --publish=32443 gcr.io/k8s-minikube/kicbase:v0.0.32@sha256:9190bd2393eae887316c97a74370b7d5dad8f0b2ef91ac2662bc36f7ef8e0b95
I0705 06:58:49.120980    8486 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0705 06:58:49.184228    8486 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0705 06:58:49.247446    8486 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0705 06:58:49.351212    8486 oci.go:144] the created container "minikube" has a running status.
I0705 06:58:49.351235    8486 kic.go:210] Creating ssh key for kic: /Users/antonzalaldinov/.minikube/machines/minikube/id_rsa...
I0705 06:58:49.492673    8486 kic_runner.go:191] docker (temp): /Users/antonzalaldinov/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0705 06:58:49.593418    8486 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0705 06:58:49.655737    8486 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0705 06:58:49.655751    8486 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0705 06:58:49.766200    8486 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0705 06:58:49.826868    8486 machine.go:88] provisioning docker machine ...
I0705 06:58:49.826907    8486 ubuntu.go:169] provisioning hostname "minikube"
I0705 06:58:49.827002    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0705 06:58:49.887841    8486 main.go:134] libmachine: Using SSH client type: native
I0705 06:58:49.888035    8486 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x104e729e0] 0x104e75510 <nil>  [] 0s} 127.0.0.1 50808 <nil> <nil>}
I0705 06:58:49.888044    8486 main.go:134] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0705 06:58:50.017378    8486 main.go:134] libmachine: SSH cmd err, output: <nil>: minikube

I0705 06:58:50.017476    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0705 06:58:50.078527    8486 main.go:134] libmachine: Using SSH client type: native
I0705 06:58:50.078667    8486 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x104e729e0] 0x104e75510 <nil>  [] 0s} 127.0.0.1 50808 <nil> <nil>}
I0705 06:58:50.078674    8486 main.go:134] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0705 06:58:50.202274    8486 main.go:134] libmachine: SSH cmd err, output: <nil>: 
I0705 06:58:50.202288    8486 ubuntu.go:175] set auth options {CertDir:/Users/antonzalaldinov/.minikube CaCertPath:/Users/antonzalaldinov/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/antonzalaldinov/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/antonzalaldinov/.minikube/machines/server.pem ServerKeyPath:/Users/antonzalaldinov/.minikube/machines/server-key.pem ClientKeyPath:/Users/antonzalaldinov/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/antonzalaldinov/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/antonzalaldinov/.minikube}
I0705 06:58:50.202318    8486 ubuntu.go:177] setting up certificates
I0705 06:58:50.202322    8486 provision.go:83] configureAuth start
I0705 06:58:50.202416    8486 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0705 06:58:50.264181    8486 provision.go:138] copyHostCerts
I0705 06:58:50.264261    8486 exec_runner.go:144] found /Users/antonzalaldinov/.minikube/cert.pem, removing ...
I0705 06:58:50.264265    8486 exec_runner.go:207] rm: /Users/antonzalaldinov/.minikube/cert.pem
I0705 06:58:50.264365    8486 exec_runner.go:151] cp: /Users/antonzalaldinov/.minikube/certs/cert.pem --> /Users/antonzalaldinov/.minikube/cert.pem (1147 bytes)
I0705 06:58:50.264529    8486 exec_runner.go:144] found /Users/antonzalaldinov/.minikube/key.pem, removing ...
I0705 06:58:50.264531    8486 exec_runner.go:207] rm: /Users/antonzalaldinov/.minikube/key.pem
I0705 06:58:50.264571    8486 exec_runner.go:151] cp: /Users/antonzalaldinov/.minikube/certs/key.pem --> /Users/antonzalaldinov/.minikube/key.pem (1675 bytes)
I0705 06:58:50.264662    8486 exec_runner.go:144] found /Users/antonzalaldinov/.minikube/ca.pem, removing ...
I0705 06:58:50.264664    8486 exec_runner.go:207] rm: /Users/antonzalaldinov/.minikube/ca.pem
I0705 06:58:50.264706    8486 exec_runner.go:151] cp: /Users/antonzalaldinov/.minikube/certs/ca.pem --> /Users/antonzalaldinov/.minikube/ca.pem (1103 bytes)
I0705 06:58:50.264792    8486 provision.go:112] generating server cert: /Users/antonzalaldinov/.minikube/machines/server.pem ca-key=/Users/antonzalaldinov/.minikube/certs/ca.pem private-key=/Users/antonzalaldinov/.minikube/certs/ca-key.pem org=antonzalaldinov.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0705 06:58:50.324827    8486 provision.go:172] copyRemoteCerts
I0705 06:58:50.324902    8486 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0705 06:58:50.324940    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0705 06:58:50.385781    8486 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50808 SSHKeyPath:/Users/antonzalaldinov/.minikube/machines/minikube/id_rsa Username:docker}
I0705 06:58:50.472066    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0705 06:58:50.487139    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1103 bytes)
I0705 06:58:50.501080    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/machines/server.pem --> /etc/docker/server.pem (1224 bytes)
I0705 06:58:50.516541    8486 provision.go:86] duration metric: configureAuth took 314.207125ms
I0705 06:58:50.516550    8486 ubuntu.go:193] setting minikube options for container-runtime
I0705 06:58:50.516714    8486 config.go:178] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.24.1
I0705 06:58:50.516772    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0705 06:58:50.579359    8486 main.go:134] libmachine: Using SSH client type: native
I0705 06:58:50.579496    8486 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x104e729e0] 0x104e75510 <nil>  [] 0s} 127.0.0.1 50808 <nil> <nil>}
I0705 06:58:50.579502    8486 main.go:134] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0705 06:58:50.706384    8486 main.go:134] libmachine: SSH cmd err, output: <nil>: overlay

I0705 06:58:50.706400    8486 ubuntu.go:71] root file system type: overlay
I0705 06:58:50.706526    8486 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0705 06:58:50.706616    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0705 06:58:50.771651    8486 main.go:134] libmachine: Using SSH client type: native
I0705 06:58:50.771788    8486 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x104e729e0] 0x104e75510 <nil>  [] 0s} 127.0.0.1 50808 <nil> <nil>}
I0705 06:58:50.771824    8486 main.go:134] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0705 06:58:50.904253    8486 main.go:134] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0705 06:58:50.904346    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0705 06:58:50.965991    8486 main.go:134] libmachine: Using SSH client type: native
I0705 06:58:50.966151    8486 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x104e729e0] 0x104e75510 <nil>  [] 0s} 127.0.0.1 50808 <nil> <nil>}
I0705 06:58:50.966159    8486 main.go:134] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0705 06:58:51.476751    8486 main.go:134] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2022-06-06 23:00:44.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2022-07-05 03:58:50.901182000 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
 Wants=network-online.target
-Requires=docker.socket containerd.service
+Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutSec=0
-RestartSec=2
-Restart=always
-
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
+Restart=on-failure
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0705 06:58:51.476775    8486 machine.go:91] provisioned docker machine in 1.649857166s
I0705 06:58:51.476784    8486 client.go:171] LocalClient.Create took 15.11687575s
I0705 06:58:51.476797    8486 start.go:173] duration metric: libmachine.API.Create for "minikube" took 15.116899708s
I0705 06:58:51.476804    8486 start.go:306] post-start starting for "minikube" (driver="docker")
I0705 06:58:51.476809    8486 start.go:316] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0705 06:58:51.477030    8486 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0705 06:58:51.477117    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0705 06:58:51.549290    8486 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50808 SSHKeyPath:/Users/antonzalaldinov/.minikube/machines/minikube/id_rsa Username:docker}
I0705 06:58:51.637843    8486 ssh_runner.go:195] Run: cat /etc/os-release
I0705 06:58:51.641499    8486 main.go:134] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0705 06:58:51.641512    8486 main.go:134] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0705 06:58:51.641516    8486 main.go:134] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0705 06:58:51.641519    8486 info.go:137] Remote host: Ubuntu 20.04.4 LTS
I0705 06:58:51.641528    8486 filesync.go:126] Scanning /Users/antonzalaldinov/.minikube/addons for local assets ...
I0705 06:58:51.641625    8486 filesync.go:126] Scanning /Users/antonzalaldinov/.minikube/files for local assets ...
I0705 06:58:51.641652    8486 start.go:309] post-start completed in 164.841083ms
I0705 06:58:51.642077    8486 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0705 06:58:51.704321    8486 profile.go:148] Saving config to /Users/antonzalaldinov/.minikube/profiles/minikube/config.json ...
I0705 06:58:51.704720    8486 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0705 06:58:51.704763    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0705 06:58:51.767927    8486 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50808 SSHKeyPath:/Users/antonzalaldinov/.minikube/machines/minikube/id_rsa Username:docker}
I0705 06:58:51.852506    8486 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0705 06:58:51.856800    8486 start.go:134] duration metric: createHost completed in 15.506404541s
I0705 06:58:51.856815    8486 start.go:81] releasing machines lock for "minikube", held for 15.506500125s
I0705 06:58:51.856916    8486 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0705 06:58:51.917555    8486 ssh_runner.go:195] Run: systemctl --version
I0705 06:58:51.917569    8486 ssh_runner.go:195] Run: curl -sS -m 2 https://k8s.gcr.io/
I0705 06:58:51.917611    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0705 06:58:51.917644    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0705 06:58:51.980568    8486 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50808 SSHKeyPath:/Users/antonzalaldinov/.minikube/machines/minikube/id_rsa Username:docker}
I0705 06:58:51.981925    8486 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:50808 SSHKeyPath:/Users/antonzalaldinov/.minikube/machines/minikube/id_rsa Username:docker}
I0705 06:58:52.065220    8486 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0705 06:58:52.184347    8486 cruntime.go:273] skipping containerd shutdown because we are bound to it
I0705 06:58:52.184449    8486 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0705 06:58:52.194304    8486 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
image-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0705 06:58:52.204410    8486 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0705 06:58:52.265411    8486 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0705 06:58:52.325801    8486 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0705 06:58:52.382355    8486 ssh_runner.go:195] Run: sudo systemctl restart docker
I0705 06:58:52.545630    8486 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0705 06:58:52.603157    8486 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0705 06:58:52.664418    8486 ssh_runner.go:195] Run: sudo systemctl start cri-docker.socket
I0705 06:58:52.675245    8486 start.go:447] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0705 06:58:52.675515    8486 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0705 06:58:52.680205    8486 start.go:468] Will wait 60s for crictl version
I0705 06:58:52.680423    8486 ssh_runner.go:195] Run: sudo crictl version
I0705 06:58:52.765873    8486 start.go:477] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  20.10.17
RuntimeApiVersion:  1.41.0
I0705 06:58:52.766092    8486 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0705 06:58:52.795339    8486 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0705 06:58:52.835045    8486 out.go:204] 🐳  Preparing Kubernetes v1.24.1 on Docker 20.10.17 ...
I0705 06:58:52.835245    8486 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0705 06:58:52.966033    8486 network.go:96] got host ip for mount in container by digging dns: 192.168.65.2
I0705 06:58:52.966235    8486 ssh_runner.go:195] Run: grep 192.168.65.2	host.minikube.internal$ /etc/hosts
I0705 06:58:52.971954    8486 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.2	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0705 06:58:52.981162    8486 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0705 06:58:53.044093    8486 preload.go:132] Checking if preload exists for k8s version v1.24.1 and runtime docker
I0705 06:58:53.044169    8486 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0705 06:58:53.068564    8486 docker.go:602] Got preloaded images: -- stdout --
k8s.gcr.io/kube-apiserver:v1.24.1
k8s.gcr.io/kube-proxy:v1.24.1
k8s.gcr.io/kube-controller-manager:v1.24.1
k8s.gcr.io/kube-scheduler:v1.24.1
k8s.gcr.io/etcd:3.5.3-0
k8s.gcr.io/pause:3.7
k8s.gcr.io/coredns/coredns:v1.8.6
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0705 06:58:53.068575    8486 docker.go:533] Images already preloaded, skipping extraction
I0705 06:58:53.068665    8486 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0705 06:58:53.094026    8486 docker.go:602] Got preloaded images: -- stdout --
k8s.gcr.io/kube-apiserver:v1.24.1
k8s.gcr.io/kube-proxy:v1.24.1
k8s.gcr.io/kube-controller-manager:v1.24.1
k8s.gcr.io/kube-scheduler:v1.24.1
k8s.gcr.io/etcd:3.5.3-0
k8s.gcr.io/pause:3.7
k8s.gcr.io/coredns/coredns:v1.8.6
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0705 06:58:53.094038    8486 cache_images.go:84] Images are preloaded, skipping loading
I0705 06:58:53.094138    8486 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0705 06:58:53.161502    8486 cni.go:95] Creating CNI manager for ""
I0705 06:58:53.161511    8486 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0705 06:58:53.161518    8486 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0705 06:58:53.161529    8486 kubeadm.go:158] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.24.1 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NoTaintMaster:true NodeIP:192.168.49.2 CgroupDriver:systemd ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[]}
I0705 06:58:53.161613    8486 kubeadm.go:162] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: /var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.24.1
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: systemd
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0705 06:58:53.161675    8486 kubeadm.go:961] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.24.1/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime=remote --container-runtime-endpoint=/var/run/cri-dockerd.sock --hostname-override=minikube --image-service-endpoint=/var/run/cri-dockerd.sock --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2 --runtime-request-timeout=15m

[Install]
 config:
{KubernetesVersion:v1.24.1 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0705 06:58:53.161770    8486 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.24.1
I0705 06:58:53.168832    8486 binaries.go:44] Found k8s binaries, skipping transfer
I0705 06:58:53.168930    8486 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0705 06:58:53.177014    8486 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (470 bytes)
I0705 06:58:53.187730    8486 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0705 06:58:53.198358    8486 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2030 bytes)
I0705 06:58:53.209400    8486 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0705 06:58:53.213969    8486 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0705 06:58:53.223449    8486 certs.go:54] Setting up /Users/antonzalaldinov/.minikube/profiles/minikube for IP: 192.168.49.2
I0705 06:58:53.223565    8486 certs.go:182] skipping minikubeCA CA generation: /Users/antonzalaldinov/.minikube/ca.key
I0705 06:58:53.223609    8486 certs.go:182] skipping proxyClientCA CA generation: /Users/antonzalaldinov/.minikube/proxy-client-ca.key
I0705 06:58:53.223641    8486 certs.go:302] generating minikube-user signed cert: /Users/antonzalaldinov/.minikube/profiles/minikube/client.key
I0705 06:58:53.223649    8486 crypto.go:68] Generating cert /Users/antonzalaldinov/.minikube/profiles/minikube/client.crt with IP's: []
I0705 06:58:53.347700    8486 crypto.go:156] Writing cert to /Users/antonzalaldinov/.minikube/profiles/minikube/client.crt ...
I0705 06:58:53.347708    8486 lock.go:35] WriteFile acquiring /Users/antonzalaldinov/.minikube/profiles/minikube/client.crt: {Name:mkd08c11d068f200e61a95b5751912356b032ccc Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0705 06:58:53.348005    8486 crypto.go:164] Writing key to /Users/antonzalaldinov/.minikube/profiles/minikube/client.key ...
I0705 06:58:53.348007    8486 lock.go:35] WriteFile acquiring /Users/antonzalaldinov/.minikube/profiles/minikube/client.key: {Name:mk279247f2f249f4ae236618b780823b6d04f36e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0705 06:58:53.348118    8486 certs.go:302] generating minikube signed cert: /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.key.dd3b5fb2
I0705 06:58:53.348126    8486 crypto.go:68] Generating cert /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 with IP's: [192.168.49.2 10.96.0.1 127.0.0.1 10.0.0.1]
I0705 06:58:53.436132    8486 crypto.go:156] Writing cert to /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 ...
I0705 06:58:53.436139    8486 lock.go:35] WriteFile acquiring /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2: {Name:mkac88c7e2842f7523bebb5731a5a79147e9faf7 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0705 06:58:53.436390    8486 crypto.go:164] Writing key to /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.key.dd3b5fb2 ...
I0705 06:58:53.436392    8486 lock.go:35] WriteFile acquiring /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.key.dd3b5fb2: {Name:mkf36004dec2d13d24345bfee41d04bd2d892219 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0705 06:58:53.436501    8486 certs.go:320] copying /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 -> /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.crt
I0705 06:58:53.436793    8486 certs.go:324] copying /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.key.dd3b5fb2 -> /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.key
I0705 06:58:53.436924    8486 certs.go:302] generating aggregator signed cert: /Users/antonzalaldinov/.minikube/profiles/minikube/proxy-client.key
I0705 06:58:53.436934    8486 crypto.go:68] Generating cert /Users/antonzalaldinov/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0705 06:58:53.519370    8486 crypto.go:156] Writing cert to /Users/antonzalaldinov/.minikube/profiles/minikube/proxy-client.crt ...
I0705 06:58:53.519376    8486 lock.go:35] WriteFile acquiring /Users/antonzalaldinov/.minikube/profiles/minikube/proxy-client.crt: {Name:mke1073d4d8a0f07fba3eda0ab8cfaf645432993 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0705 06:58:53.519591    8486 crypto.go:164] Writing key to /Users/antonzalaldinov/.minikube/profiles/minikube/proxy-client.key ...
I0705 06:58:53.519593    8486 lock.go:35] WriteFile acquiring /Users/antonzalaldinov/.minikube/profiles/minikube/proxy-client.key: {Name:mk455e5b4f09eee630751c06572e600f4c54ddd7 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0705 06:58:53.519849    8486 certs.go:388] found cert: /Users/antonzalaldinov/.minikube/certs/Users/antonzalaldinov/.minikube/certs/ca-key.pem (1679 bytes)
I0705 06:58:53.519877    8486 certs.go:388] found cert: /Users/antonzalaldinov/.minikube/certs/Users/antonzalaldinov/.minikube/certs/ca.pem (1103 bytes)
I0705 06:58:53.519899    8486 certs.go:388] found cert: /Users/antonzalaldinov/.minikube/certs/Users/antonzalaldinov/.minikube/certs/cert.pem (1147 bytes)
I0705 06:58:53.519923    8486 certs.go:388] found cert: /Users/antonzalaldinov/.minikube/certs/Users/antonzalaldinov/.minikube/certs/key.pem (1675 bytes)
I0705 06:58:53.520269    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0705 06:58:53.556423    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0705 06:58:53.572619    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0705 06:58:53.588041    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0705 06:58:53.602261    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0705 06:58:53.615484    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0705 06:58:53.629016    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0705 06:58:53.643569    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0705 06:58:53.658759    8486 ssh_runner.go:362] scp /Users/antonzalaldinov/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0705 06:58:53.672889    8486 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0705 06:58:53.684285    8486 ssh_runner.go:195] Run: openssl version
I0705 06:58:53.689820    8486 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0705 06:58:53.696863    8486 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0705 06:58:53.700798    8486 certs.go:431] hashing: -rw-r--r-- 1 root root 1111 Jun 28 04:17 /usr/share/ca-certificates/minikubeCA.pem
I0705 06:58:53.700847    8486 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0705 06:58:53.706036    8486 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0705 06:58:53.713318    8486 kubeadm.go:395] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.32@sha256:9190bd2393eae887316c97a74370b7d5dad8f0b2ef91ac2662bc36f7ef8e0b95 Memory:7803 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.1 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.24.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:}
I0705 06:58:53.713404    8486 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0705 06:58:53.740366    8486 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0705 06:58:53.748193    8486 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0705 06:58:53.755621    8486 kubeadm.go:221] ignoring SystemVerification for kubeadm because of docker driver
I0705 06:58:53.755765    8486 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0705 06:58:53.766061    8486 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0705 06:58:53.766093    8486 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.24.1:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0705 06:58:54.022981    8486 out.go:204]     ▪ Generating certificates and keys ...
I0705 06:58:55.698073    8486 out.go:204]     ▪ Booting up control plane ...
I0705 06:59:05.756003    8486 out.go:204]     ▪ Configuring RBAC rules ...
I0705 06:59:06.163893    8486 cni.go:95] Creating CNI manager for ""
I0705 06:59:06.163912    8486 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0705 06:59:06.163959    8486 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0705 06:59:06.164233    8486 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.24.1/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0705 06:59:06.164303    8486 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.24.1/kubectl label nodes minikube.k8s.io/version=v1.26.0 minikube.k8s.io/commit=f4b412861bb746be73053c9f6d2895f12cf78565 minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2022_07_05T06_59_06_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0705 06:59:06.294310    8486 ops.go:34] apiserver oom_adj: -16
I0705 06:59:06.294358    8486 kubeadm.go:1045] duration metric: took 130.401333ms to wait for elevateKubeSystemPrivileges.
I0705 06:59:06.294386    8486 kubeadm.go:397] StartCluster complete in 12.580814209s
I0705 06:59:06.294408    8486 settings.go:142] acquiring lock: {Name:mkd828db7b7cf864e2d4d124744c6ee9c2490d8b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0705 06:59:06.294570    8486 settings.go:150] Updating kubeconfig:  /etc/kubernetes/admin.conf
I0705 06:59:06.294991    8486 lock.go:35] WriteFile acquiring /etc/kubernetes/admin.conf: {Name:mk35a4fcc6ab089d789fecaeed428cc839214876 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0705 06:59:06.302649    8486 out.go:177] 
W0705 06:59:06.306822    8486 out.go:239] ❌  Exiting due to GUEST_START: Failed kubeconfig update: writing kubeconfig: Error writing file /etc/kubernetes/admin.conf: open /etc/kubernetes/admin.conf: permission denied
W0705 06:59:06.306855    8486 out.go:239] 
W0705 06:59:06.308069    8486 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0705 06:59:06.319626    8486 out.go:177] 

* 
* ==> Docker <==
* -- Logs begin at Tue 2022-07-05 03:58:49 UTC, end at Tue 2022-07-05 03:59:23 UTC. --
Jul 05 03:58:49 minikube dockerd[123]: time="2022-07-05T03:58:49.354521416Z" level=info msg="ClientConn switching balancer to \"pick_first\"" module=grpc
Jul 05 03:58:49 minikube dockerd[123]: time="2022-07-05T03:58:49.360099708Z" level=info msg="[graphdriver] using prior storage driver: overlay2"
Jul 05 03:58:49 minikube dockerd[123]: time="2022-07-05T03:58:49.366168583Z" level=info msg="Loading containers: start."
Jul 05 03:58:49 minikube dockerd[123]: time="2022-07-05T03:58:49.406815000Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Jul 05 03:58:49 minikube dockerd[123]: time="2022-07-05T03:58:49.430810166Z" level=info msg="Loading containers: done."
Jul 05 03:58:49 minikube dockerd[123]: time="2022-07-05T03:58:49.438000291Z" level=info msg="Docker daemon" commit=a89b842 graphdriver(s)=overlay2 version=20.10.17
Jul 05 03:58:49 minikube dockerd[123]: time="2022-07-05T03:58:49.438072416Z" level=info msg="Daemon has completed initialization"
Jul 05 03:58:49 minikube systemd[1]: Started Docker Application Container Engine.
Jul 05 03:58:49 minikube dockerd[123]: time="2022-07-05T03:58:49.461026583Z" level=info msg="API listen on /run/docker.sock"
Jul 05 03:58:51 minikube systemd[1]: docker.service: Current command vanished from the unit file, execution of the command list won't be resumed.
Jul 05 03:58:51 minikube systemd[1]: Stopping Docker Application Container Engine...
Jul 05 03:58:51 minikube dockerd[123]: time="2022-07-05T03:58:51.314178751Z" level=info msg="Processing signal 'terminated'"
Jul 05 03:58:51 minikube dockerd[123]: time="2022-07-05T03:58:51.315498667Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Jul 05 03:58:51 minikube dockerd[123]: time="2022-07-05T03:58:51.315683709Z" level=info msg="Daemon shutdown complete"
Jul 05 03:58:51 minikube systemd[1]: docker.service: Succeeded.
Jul 05 03:58:51 minikube systemd[1]: Stopped Docker Application Container Engine.
Jul 05 03:58:51 minikube systemd[1]: Starting Docker Application Container Engine...
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.362646626Z" level=info msg="Starting up"
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.364476376Z" level=info msg="parsed scheme: \"unix\"" module=grpc
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.364521501Z" level=info msg="scheme \"unix\" not registered, fallback to default scheme" module=grpc
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.364640126Z" level=info msg="ccResolverWrapper: sending update to cc: {[{unix:///run/containerd/containerd.sock  <nil> 0 <nil>}] <nil> <nil>}" module=grpc
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.364681917Z" level=info msg="ClientConn switching balancer to \"pick_first\"" module=grpc
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.366171209Z" level=info msg="parsed scheme: \"unix\"" module=grpc
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.366337709Z" level=info msg="scheme \"unix\" not registered, fallback to default scheme" module=grpc
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.366362542Z" level=info msg="ccResolverWrapper: sending update to cc: {[{unix:///run/containerd/containerd.sock  <nil> 0 <nil>}] <nil> <nil>}" module=grpc
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.366371667Z" level=info msg="ClientConn switching balancer to \"pick_first\"" module=grpc
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.370727209Z" level=info msg="[graphdriver] using prior storage driver: overlay2"
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.374091251Z" level=info msg="Loading containers: start."
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.429478709Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.450350292Z" level=info msg="Loading containers: done."
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.457828334Z" level=info msg="Docker daemon" commit=a89b842 graphdriver(s)=overlay2 version=20.10.17
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.457874959Z" level=info msg="Daemon has completed initialization"
Jul 05 03:58:51 minikube systemd[1]: Started Docker Application Container Engine.
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.478848042Z" level=info msg="API listen on [::]:2376"
Jul 05 03:58:51 minikube dockerd[375]: time="2022-07-05T03:58:51.481510334Z" level=info msg="API listen on /var/run/docker.sock"
Jul 05 03:58:52 minikube systemd[1]: Stopping Docker Application Container Engine...
Jul 05 03:58:52 minikube dockerd[375]: time="2022-07-05T03:58:52.390001668Z" level=info msg="Processing signal 'terminated'"
Jul 05 03:58:52 minikube dockerd[375]: time="2022-07-05T03:58:52.390644918Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Jul 05 03:58:52 minikube dockerd[375]: time="2022-07-05T03:58:52.390743418Z" level=info msg="Daemon shutdown complete"
Jul 05 03:58:52 minikube systemd[1]: docker.service: Succeeded.
Jul 05 03:58:52 minikube systemd[1]: Stopped Docker Application Container Engine.
Jul 05 03:58:52 minikube systemd[1]: Starting Docker Application Container Engine...
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.439346959Z" level=info msg="Starting up"
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.441009168Z" level=info msg="parsed scheme: \"unix\"" module=grpc
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.441029668Z" level=info msg="scheme \"unix\" not registered, fallback to default scheme" module=grpc
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.441045168Z" level=info msg="ccResolverWrapper: sending update to cc: {[{unix:///run/containerd/containerd.sock  <nil> 0 <nil>}] <nil> <nil>}" module=grpc
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.441053251Z" level=info msg="ClientConn switching balancer to \"pick_first\"" module=grpc
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.442067668Z" level=info msg="parsed scheme: \"unix\"" module=grpc
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.442089668Z" level=info msg="scheme \"unix\" not registered, fallback to default scheme" module=grpc
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.442100793Z" level=info msg="ccResolverWrapper: sending update to cc: {[{unix:///run/containerd/containerd.sock  <nil> 0 <nil>}] <nil> <nil>}" module=grpc
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.442110251Z" level=info msg="ClientConn switching balancer to \"pick_first\"" module=grpc
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.446332876Z" level=info msg="[graphdriver] using prior storage driver: overlay2"
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.449158543Z" level=info msg="Loading containers: start."
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.501158084Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.522461834Z" level=info msg="Loading containers: done."
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.528874209Z" level=info msg="Docker daemon" commit=a89b842 graphdriver(s)=overlay2 version=20.10.17
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.528915251Z" level=info msg="Daemon has completed initialization"
Jul 05 03:58:52 minikube systemd[1]: Started Docker Application Container Engine.
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.546422585Z" level=info msg="API listen on [::]:2376"
Jul 05 03:58:52 minikube dockerd[585]: time="2022-07-05T03:58:52.550822418Z" level=info msg="API listen on /var/run/docker.sock"

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID
7ac1e07ce798b       edaa71f2aee88       3 seconds ago       Running             coredns                   0                   6a49aa34f99b8
8bf7da2282cbd       edaa71f2aee88       3 seconds ago       Running             coredns                   0                   963f04fb7b344
f30c960d9077b       fcbd620bbac08       3 seconds ago       Running             kube-proxy                0                   56f45cdb8174f
79567b8f0eebf       f61bbe9259d7c       23 seconds ago      Running             kube-controller-manager   0                   65fca8b9d2f5a
c9f38340e622c       7c5896a75862a       23 seconds ago      Running             kube-apiserver            0                   db04bcf7b3239
c8d8d23b7e7e6       a9a710bb96df0       23 seconds ago      Running             etcd                      0                   6a000dd25fc93
7cad2a6ae64bc       000c19baf6bba       23 seconds ago      Running             kube-scheduler            0                   8073e009877a2

* 
* ==> coredns [7ac1e07ce798] <==
* .:53
[INFO] plugin/reload: Running configuration MD5 = db32ca3650231d74073ff4cf814959a7
CoreDNS-1.8.6
linux/arm64, go1.17.1, 13a9191

* 
* ==> coredns [8bf7da2282cb] <==
* .:53
[INFO] plugin/reload: Running configuration MD5 = db32ca3650231d74073ff4cf814959a7
CoreDNS-1.8.6
linux/arm64, go1.17.1, 13a9191

* 
* ==> describe nodes <==
* Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=arm64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=arm64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=f4b412861bb746be73053c9f6d2895f12cf78565
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2022_07_05T06_59_06_0700
                    minikube.k8s.io/version=v1.26.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Tue, 05 Jul 2022 03:59:03 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Tue, 05 Jul 2022 03:59:16 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Tue, 05 Jul 2022 03:59:06 +0000   Tue, 05 Jul 2022 03:59:02 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Tue, 05 Jul 2022 03:59:06 +0000   Tue, 05 Jul 2022 03:59:02 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Tue, 05 Jul 2022 03:59:06 +0000   Tue, 05 Jul 2022 03:59:02 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Tue, 05 Jul 2022 03:59:06 +0000   Tue, 05 Jul 2022 03:59:06 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                5
  ephemeral-storage:  61255492Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             8039792Ki
  pods:               110
Allocatable:
  cpu:                5
  ephemeral-storage:  61255492Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             8039792Ki
  pods:               110
System Info:
  Machine ID:                 882128f231464a7d861a5b7cb14d6fce
  System UUID:                882128f231464a7d861a5b7cb14d6fce
  Boot ID:                    9a2fdc6b-7263-4085-b1fe-725b1b75d093
  Kernel Version:             5.10.104-linuxkit
  OS Image:                   Ubuntu 20.04.4 LTS
  Operating System:           linux
  Architecture:               arm64
  Container Runtime Version:  docker://20.10.17
  Kubelet Version:            v1.24.1
  Kube-Proxy Version:         v1.24.1
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (7 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  kube-system                 coredns-6d4b75cb6d-4lrgq            100m (2%!)(MISSING)     0 (0%!)(MISSING)      70Mi (0%!)(MISSING)        170Mi (2%!)(MISSING)     5s
  kube-system                 coredns-6d4b75cb6d-8bsg6            100m (2%!)(MISSING)     0 (0%!)(MISSING)      70Mi (0%!)(MISSING)        170Mi (2%!)(MISSING)     5s
  kube-system                 etcd-minikube                       100m (2%!)(MISSING)     0 (0%!)(MISSING)      100Mi (1%!)(MISSING)       0 (0%!)(MISSING)         17s
  kube-system                 kube-apiserver-minikube             250m (5%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         18s
  kube-system                 kube-controller-manager-minikube    200m (4%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         17s
  kube-system                 kube-proxy-cgw7t                    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         5s
  kube-system                 kube-scheduler-minikube             100m (2%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         17s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                850m (17%!)(MISSING)  0 (0%!)(MISSING)
  memory             240Mi (3%!)(MISSING)  340Mi (4%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-32Mi     0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-64Ki     0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age   From             Message
  ----    ------                   ----  ----             -------
  Normal  Starting                 3s    kube-proxy       
  Normal  Starting                 18s   kubelet          Starting kubelet.
  Normal  NodeReady                17s   kubelet          Node minikube status is now: NodeReady
  Normal  NodeAllocatableEnforced  17s   kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  17s   kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    17s   kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     17s   kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  RegisteredNode           5s    node-controller  Node minikube event: Registered Node minikube in Controller

* 
* ==> dmesg <==
* [Jul 5 03:42] cacheinfo: Unable to detect cache hierarchy for CPU 0
[  +0.032784] the cryptoloop driver has been deprecated and will be removed in in Linux 5.16
[ +17.272968] grpcfuse: loading out-of-tree module taints kernel.
[Jul 5 03:55] hrtimer: interrupt took 12487875 ns

* 
* ==> etcd [c8d8d23b7e7e] <==
* {"level":"warn","ts":"2022-07-05T03:59:00.835Z","caller":"flags/flag.go:93","msg":"unrecognized environment variable","environment-variable":"ETCD_UNSUPPORTED_ARCH=arm64"}
{"level":"info","ts":"2022-07-05T03:59:00.835Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"info","ts":"2022-07-05T03:59:00.835Z","caller":"embed/etcd.go:131","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2022-07-05T03:59:00.835Z","caller":"embed/etcd.go:479","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2022-07-05T03:59:00.836Z","caller":"embed/etcd.go:139","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2022-07-05T03:59:00.836Z","caller":"embed/etcd.go:308","msg":"starting an etcd server","etcd-version":"3.5.3","git-sha":"0452feec7","go-version":"go1.16.2","go-os":"linux","go-arch":"arm64","max-cpu-set":5,"max-cpu-available":5,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-size-bytes":2147483648,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2022-07-05T03:59:00.838Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"1.173959ms"}
{"level":"info","ts":"2022-07-05T03:59:00.841Z","caller":"etcdserver/raft.go:448","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2022-07-05T03:59:00.842Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2022-07-05T03:59:00.842Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2022-07-05T03:59:00.842Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2022-07-05T03:59:00.842Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2022-07-05T03:59:00.842Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2022-07-05T03:59:00.845Z","caller":"auth/store.go:1220","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2022-07-05T03:59:00.847Z","caller":"mvcc/kvstore.go:415","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2022-07-05T03:59:00.849Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2022-07-05T03:59:00.850Z","caller":"etcdserver/server.go:851","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.3","cluster-version":"to_be_decided"}
{"level":"info","ts":"2022-07-05T03:59:00.851Z","caller":"etcdserver/server.go:736","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2022-07-05T03:59:00.852Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2022-07-05T03:59:00.852Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2022-07-05T03:59:00.853Z","caller":"embed/etcd.go:688","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2022-07-05T03:59:00.853Z","caller":"embed/etcd.go:581","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2022-07-05T03:59:00.853Z","caller":"embed/etcd.go:553","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2022-07-05T03:59:00.853Z","caller":"embed/etcd.go:277","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2022-07-05T03:59:00.853Z","caller":"embed/etcd.go:763","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2022-07-05T03:59:01.742Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2022-07-05T03:59:01.742Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2022-07-05T03:59:01.742Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2022-07-05T03:59:01.742Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2022-07-05T03:59:01.743Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2022-07-05T03:59:01.743Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2022-07-05T03:59:01.743Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2022-07-05T03:59:01.743Z","caller":"etcdserver/server.go:2042","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2022-07-05T03:59:01.743Z","caller":"embed/serve.go:98","msg":"ready to serve client requests"}
{"level":"info","ts":"2022-07-05T03:59:01.743Z","caller":"embed/serve.go:98","msg":"ready to serve client requests"}
{"level":"info","ts":"2022-07-05T03:59:01.744Z","caller":"etcdserver/server.go:2507","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2022-07-05T03:59:01.744Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2022-07-05T03:59:01.744Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2022-07-05T03:59:01.744Z","caller":"embed/serve.go:188","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2022-07-05T03:59:01.744Z","caller":"embed/serve.go:188","msg":"serving client traffic securely","address":"192.168.49.2:2379"}
{"level":"info","ts":"2022-07-05T03:59:01.745Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2022-07-05T03:59:01.745Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2022-07-05T03:59:01.745Z","caller":"etcdserver/server.go:2531","msg":"cluster version is updated","cluster-version":"3.5"}

* 
* ==> kernel <==
*  03:59:23 up 16 min,  0 users,  load average: 0.52, 0.41, 0.19
Linux minikube 5.10.104-linuxkit #1 SMP PREEMPT Thu Mar 17 17:05:54 UTC 2022 aarch64 aarch64 aarch64 GNU/Linux
PRETTY_NAME="Ubuntu 20.04.4 LTS"

* 
* ==> kube-apiserver [c9f38340e622] <==
* W0705 03:59:02.246292       1 genericapiserver.go:557] Skipping API apps/v1beta1 because it has no resources.
W0705 03:59:02.247329       1 genericapiserver.go:557] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
I0705 03:59:02.249507       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0705 03:59:02.249518       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
W0705 03:59:02.268175       1 genericapiserver.go:557] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0705 03:59:02.978343       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0705 03:59:02.978462       1 secure_serving.go:210] Serving securely on [::]:8443
I0705 03:59:02.978489       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/var/lib/minikube/certs/apiserver.crt::/var/lib/minikube/certs/apiserver.key"
I0705 03:59:02.978631       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0705 03:59:02.978686       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0705 03:59:02.978811       1 customresource_discovery_controller.go:209] Starting DiscoveryController
I0705 03:59:02.978864       1 available_controller.go:491] Starting AvailableConditionController
I0705 03:59:02.978876       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0705 03:59:02.978886       1 controller.go:83] Starting OpenAPI AggregationController
I0705 03:59:02.978898       1 apf_controller.go:317] Starting API Priority and Fairness config controller
I0705 03:59:02.980023       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0705 03:59:02.993824       1 controller.go:85] Starting OpenAPI controller
I0705 03:59:02.993849       1 controller.go:85] Starting OpenAPI V3 controller
I0705 03:59:02.993857       1 naming_controller.go:291] Starting NamingConditionController
I0705 03:59:02.993868       1 establishing_controller.go:76] Starting EstablishingController
I0705 03:59:02.993875       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0705 03:59:02.993882       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0705 03:59:02.993887       1 crd_finalizer.go:266] Starting CRDFinalizer
I0705 03:59:02.994175       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0705 03:59:02.994184       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0705 03:59:02.994530       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0705 03:59:02.994471       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0705 03:59:02.994553       1 shared_informer.go:255] Waiting for caches to sync for cluster_authentication_trust_controller
I0705 03:59:02.994488       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0705 03:59:02.994707       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0705 03:59:02.995821       1 shared_informer.go:255] Waiting for caches to sync for crd-autoregister
I0705 03:59:02.994495       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0705 03:59:02.993825       1 autoregister_controller.go:141] Starting autoregister controller
I0705 03:59:02.999861       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0705 03:59:03.025853       1 controller.go:611] quota admission added evaluator for: namespaces
I0705 03:59:03.032872       1 shared_informer.go:262] Caches are synced for node_authorizer
I0705 03:59:03.079799       1 apf_controller.go:322] Running API Priority and Fairness config worker
I0705 03:59:03.079836       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0705 03:59:03.094785       1 shared_informer.go:262] Caches are synced for cluster_authentication_trust_controller
I0705 03:59:03.094833       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0705 03:59:03.095926       1 shared_informer.go:262] Caches are synced for crd-autoregister
I0705 03:59:03.099901       1 cache.go:39] Caches are synced for autoregister controller
I0705 03:59:03.819534       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0705 03:59:04.012583       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0705 03:59:04.017608       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0705 03:59:04.017697       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0705 03:59:04.330678       1 controller.go:611] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0705 03:59:04.347033       1 controller.go:611] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0705 03:59:04.433449       1 alloc.go:327] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W0705 03:59:04.436546       1 lease.go:234] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0705 03:59:04.437189       1 controller.go:611] quota admission added evaluator for: endpoints
I0705 03:59:04.438945       1 controller.go:611] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0705 03:59:05.127359       1 controller.go:611] quota admission added evaluator for: serviceaccounts
I0705 03:59:05.904607       1 controller.go:611] quota admission added evaluator for: deployments.apps
I0705 03:59:05.909642       1 alloc.go:327] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0705 03:59:05.945300       1 controller.go:611] quota admission added evaluator for: daemonsets.apps
I0705 03:59:05.977432       1 controller.go:611] quota admission added evaluator for: leases.coordination.k8s.io
I0705 03:59:18.431583       1 controller.go:611] quota admission added evaluator for: replicasets.apps
I0705 03:59:18.881005       1 controller.go:611] quota admission added evaluator for: controllerrevisions.apps
I0705 03:59:20.368719       1 controller.go:611] quota admission added evaluator for: events.events.k8s.io

* 
* ==> kube-controller-manager [79567b8f0eeb] <==
* I0705 03:59:17.730169       1 gc_controller.go:92] Starting GC controller
I0705 03:59:17.730178       1 shared_informer.go:255] Waiting for caches to sync for GC
I0705 03:59:17.878349       1 controllermanager.go:593] Started "replicaset"
I0705 03:59:17.878584       1 replica_set.go:205] Starting replicaset controller
I0705 03:59:17.878602       1 shared_informer.go:255] Waiting for caches to sync for ReplicaSet
I0705 03:59:17.880870       1 shared_informer.go:255] Waiting for caches to sync for resource quota
I0705 03:59:17.891404       1 shared_informer.go:255] Waiting for caches to sync for garbage collector
I0705 03:59:17.913137       1 shared_informer.go:262] Caches are synced for ClusterRoleAggregator
I0705 03:59:17.917133       1 shared_informer.go:262] Caches are synced for TTL after finished
I0705 03:59:17.922224       1 shared_informer.go:262] Caches are synced for endpoint_slice_mirroring
I0705 03:59:17.924498       1 shared_informer.go:262] Caches are synced for disruption
I0705 03:59:17.924516       1 disruption.go:371] Sending events to api server.
I0705 03:59:17.924531       1 shared_informer.go:262] Caches are synced for stateful set
I0705 03:59:17.924555       1 shared_informer.go:262] Caches are synced for bootstrap_signer
I0705 03:59:17.924561       1 shared_informer.go:262] Caches are synced for ephemeral
I0705 03:59:17.926757       1 shared_informer.go:262] Caches are synced for ReplicationController
I0705 03:59:17.929343       1 shared_informer.go:262] Caches are synced for PV protection
I0705 03:59:17.931140       1 shared_informer.go:262] Caches are synced for job
I0705 03:59:17.931163       1 shared_informer.go:262] Caches are synced for namespace
I0705 03:59:17.934089       1 shared_informer.go:262] Caches are synced for deployment
I0705 03:59:17.945321       1 shared_informer.go:262] Caches are synced for PVC protection
I0705 03:59:17.948578       1 shared_informer.go:262] Caches are synced for endpoint
I0705 03:59:17.959025       1 shared_informer.go:262] Caches are synced for expand
I0705 03:59:17.962840       1 shared_informer.go:262] Caches are synced for cronjob
I0705 03:59:17.974766       1 shared_informer.go:262] Caches are synced for service account
I0705 03:59:17.977136       1 shared_informer.go:262] Caches are synced for HPA
I0705 03:59:17.979659       1 shared_informer.go:262] Caches are synced for ReplicaSet
I0705 03:59:17.981000       1 shared_informer.go:262] Caches are synced for crt configmap
W0705 03:59:17.982006       1 actual_state_of_world.go:541] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="minikube" does not exist
I0705 03:59:17.999032       1 shared_informer.go:262] Caches are synced for node
I0705 03:59:17.999063       1 range_allocator.go:173] Starting range CIDR allocator
I0705 03:59:17.999065       1 shared_informer.go:255] Waiting for caches to sync for cidrallocator
I0705 03:59:17.999069       1 shared_informer.go:262] Caches are synced for cidrallocator
I0705 03:59:18.002029       1 range_allocator.go:374] Set node minikube PodCIDR to [10.244.0.0/24]
I0705 03:59:18.005769       1 shared_informer.go:262] Caches are synced for persistent volume
I0705 03:59:18.030390       1 shared_informer.go:262] Caches are synced for GC
I0705 03:59:18.037918       1 shared_informer.go:262] Caches are synced for taint
I0705 03:59:18.037972       1 node_lifecycle_controller.go:1399] Initializing eviction metric for zone: 
W0705 03:59:18.037999       1 node_lifecycle_controller.go:1014] Missing timestamp for Node minikube. Assuming now as a timestamp.
I0705 03:59:18.038043       1 node_lifecycle_controller.go:1215] Controller detected that zone  is now in state Normal.
I0705 03:59:18.038214       1 taint_manager.go:187] "Starting NoExecuteTaintManager"
I0705 03:59:18.038228       1 event.go:294] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0705 03:59:18.040116       1 shared_informer.go:262] Caches are synced for attach detach
I0705 03:59:18.075597       1 shared_informer.go:262] Caches are synced for endpoint_slice
I0705 03:59:18.075665       1 shared_informer.go:262] Caches are synced for TTL
I0705 03:59:18.080122       1 shared_informer.go:262] Caches are synced for daemon sets
I0705 03:59:18.136006       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0705 03:59:18.136161       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-legacy-unknown
I0705 03:59:18.136192       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kubelet-client
I0705 03:59:18.136213       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kubelet-serving
I0705 03:59:18.151354       1 shared_informer.go:262] Caches are synced for resource quota
I0705 03:59:18.174329       1 shared_informer.go:262] Caches are synced for certificate-csrapproving
I0705 03:59:18.180971       1 shared_informer.go:262] Caches are synced for resource quota
I0705 03:59:18.433748       1 event.go:294] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-6d4b75cb6d to 2"
I0705 03:59:18.593554       1 shared_informer.go:262] Caches are synced for garbage collector
I0705 03:59:18.654593       1 shared_informer.go:262] Caches are synced for garbage collector
I0705 03:59:18.654614       1 garbagecollector.go:158] Garbage collector: all resource monitors have synced. Proceeding to collect garbage
I0705 03:59:18.884974       1 event.go:294] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-cgw7t"
I0705 03:59:18.982147       1 event.go:294] "Event occurred" object="kube-system/coredns-6d4b75cb6d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-6d4b75cb6d-8bsg6"
I0705 03:59:18.985396       1 event.go:294] "Event occurred" object="kube-system/coredns-6d4b75cb6d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-6d4b75cb6d-4lrgq"

* 
* ==> kube-proxy [f30c960d9077] <==
* I0705 03:59:20.346562       1 node.go:163] Successfully retrieved node IP: 192.168.49.2
I0705 03:59:20.346610       1 server_others.go:138] "Detected node IP" address="192.168.49.2"
I0705 03:59:20.346624       1 server_others.go:578] "Unknown proxy mode, assuming iptables proxy" proxyMode=""
I0705 03:59:20.365074       1 server_others.go:206] "Using iptables Proxier"
I0705 03:59:20.365132       1 server_others.go:213] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0705 03:59:20.365136       1 server_others.go:214] "Creating dualStackProxier for iptables"
I0705 03:59:20.365146       1 server_others.go:501] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6"
I0705 03:59:20.365167       1 proxier.go:259] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0705 03:59:20.365809       1 proxier.go:259] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0705 03:59:20.366683       1 server.go:661] "Version info" version="v1.24.1"
I0705 03:59:20.366705       1 server.go:663] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0705 03:59:20.367589       1 config.go:317] "Starting service config controller"
I0705 03:59:20.367597       1 shared_informer.go:255] Waiting for caches to sync for service config
I0705 03:59:20.367608       1 config.go:226] "Starting endpoint slice config controller"
I0705 03:59:20.367610       1 shared_informer.go:255] Waiting for caches to sync for endpoint slice config
I0705 03:59:20.367622       1 config.go:444] "Starting node config controller"
I0705 03:59:20.367623       1 shared_informer.go:255] Waiting for caches to sync for node config
I0705 03:59:20.467785       1 shared_informer.go:262] Caches are synced for node config
I0705 03:59:20.467788       1 shared_informer.go:262] Caches are synced for endpoint slice config
I0705 03:59:20.467801       1 shared_informer.go:262] Caches are synced for service config

* 
* ==> kube-scheduler [7cad2a6ae64b] <==
* I0705 03:59:01.275198       1 serving.go:348] Generated self-signed cert in-memory
W0705 03:59:02.995058       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0705 03:59:02.995148       1 authentication.go:346] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0705 03:59:02.995164       1 authentication.go:347] Continuing without authentication configuration. This may treat all requests as anonymous.
W0705 03:59:02.995168       1 authentication.go:348] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0705 03:59:03.023423       1 server.go:147] "Starting Kubernetes Scheduler" version="v1.24.1"
I0705 03:59:03.023439       1 server.go:149] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0705 03:59:03.024038       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I0705 03:59:03.024065       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0705 03:59:03.024963       1 shared_informer.go:255] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0705 03:59:03.024075       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0705 03:59:03.026079       1 reflector.go:324] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0705 03:59:03.026172       1 reflector.go:138] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0705 03:59:03.026219       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0705 03:59:03.026297       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0705 03:59:03.026304       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0705 03:59:03.026315       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0705 03:59:03.026331       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0705 03:59:03.026350       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0705 03:59:03.026338       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0705 03:59:03.026374       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0705 03:59:03.027337       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0705 03:59:03.027366       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0705 03:59:03.027579       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0705 03:59:03.027617       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0705 03:59:03.028059       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0705 03:59:03.028078       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0705 03:59:03.028091       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0705 03:59:03.028098       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0705 03:59:03.028451       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0705 03:59:03.028495       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0705 03:59:03.028489       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0705 03:59:03.028525       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0705 03:59:03.029112       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0705 03:59:03.029125       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0705 03:59:03.029147       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0705 03:59:03.029151       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0705 03:59:03.029184       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0705 03:59:03.029189       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0705 03:59:03.029325       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0705 03:59:03.029363       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0705 03:59:03.879095       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0705 03:59:03.879143       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0705 03:59:03.947311       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0705 03:59:03.947362       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0705 03:59:04.005639       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0705 03:59:04.005709       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0705 03:59:04.063828       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0705 03:59:04.063851       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0705 03:59:04.072596       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0705 03:59:04.072649       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0705 03:59:04.141222       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0705 03:59:04.141306       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0705 03:59:04.190009       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0705 03:59:04.190039       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0705 03:59:04.225479       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0705 03:59:04.225500       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
I0705 03:59:04.625647       1 shared_informer.go:262] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file

* 
* ==> kubelet <==
* -- Logs begin at Tue 2022-07-05 03:58:49 UTC, end at Tue 2022-07-05 03:59:24 UTC. --
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.026617    1838 cpu_manager.go:213] "Starting CPU manager" policy="none"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.026640    1838 cpu_manager.go:214] "Reconciling" reconcilePeriod="10s"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.026651    1838 state_mem.go:36] "Initialized new in-memory state store"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.026734    1838 state_mem.go:88] "Updated default CPUSet" cpuSet=""
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.026742    1838 state_mem.go:96] "Updated CPUSet assignments" assignments=map[]
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.026747    1838 policy_none.go:49] "None policy: Start"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.028687    1838 memory_manager.go:168] "Starting memorymanager" policy="None"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.028712    1838 state_mem.go:35] "Initializing new in-memory state store"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.028795    1838 state_mem.go:75] "Updated machine memory state"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.029594    1838 kubelet_network_linux.go:76] "Initialized protocol iptables rules." protocol=IPv6
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.029648    1838 status_manager.go:161] "Starting to sync pod status with apiserver"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.029661    1838 kubelet.go:1974] "Starting kubelet main sync loop"
Jul 05 03:59:06 minikube kubelet[1838]: E0705 03:59:06.029685    1838 kubelet.go:1998] "Skipping pod synchronization" err="[container runtime status check may not have completed yet, PLEG is not healthy: pleg has yet to be successful]"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.036850    1838 manager.go:610] "Failed to read data from checkpoint" checkpoint="kubelet_internal_checkpoint" err="checkpoint is not found"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.036990    1838 plugin_manager.go:114] "Starting Kubelet Plugin Manager"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.084063    1838 kubelet_node_status.go:70] "Attempting to register node" node="minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.124512    1838 kubelet_node_status.go:108] "Node was previously registered" node="minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.124662    1838 kubelet_node_status.go:73] "Successfully registered node" node="minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.130046    1838 topology_manager.go:200] "Topology Admit Handler"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.130132    1838 topology_manager.go:200] "Topology Admit Handler"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.130155    1838 topology_manager.go:200] "Topology Admit Handler"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.130180    1838 topology_manager.go:200] "Topology Admit Handler"
Jul 05 03:59:06 minikube kubelet[1838]: E0705 03:59:06.164923    1838 kubelet.go:1690] "Failed creating a mirror pod for" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275378    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/b4f7419eaf4a6f0ee6121d47723a0c8d-ca-certs\") pod \"kube-controller-manager-minikube\" (UID: \"b4f7419eaf4a6f0ee6121d47723a0c8d\") " pod="kube-system/kube-controller-manager-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275447    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/906edd533192a4db2396a938662a5271-etcd-certs\") pod \"etcd-minikube\" (UID: \"906edd533192a4db2396a938662a5271\") " pod="kube-system/etcd-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275465    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/6580cebb2d04c6c59385cf58e278b0a6-ca-certs\") pod \"kube-apiserver-minikube\" (UID: \"6580cebb2d04c6c59385cf58e278b0a6\") " pod="kube-system/kube-apiserver-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275479    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/6580cebb2d04c6c59385cf58e278b0a6-usr-local-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"6580cebb2d04c6c59385cf58e278b0a6\") " pod="kube-system/kube-apiserver-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275491    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/6580cebb2d04c6c59385cf58e278b0a6-usr-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"6580cebb2d04c6c59385cf58e278b0a6\") " pod="kube-system/kube-apiserver-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275503    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/b4f7419eaf4a6f0ee6121d47723a0c8d-etc-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"b4f7419eaf4a6f0ee6121d47723a0c8d\") " pod="kube-system/kube-controller-manager-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275517    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/b4f7419eaf4a6f0ee6121d47723a0c8d-flexvolume-dir\") pod \"kube-controller-manager-minikube\" (UID: \"b4f7419eaf4a6f0ee6121d47723a0c8d\") " pod="kube-system/kube-controller-manager-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275528    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/906edd533192a4db2396a938662a5271-etcd-data\") pod \"etcd-minikube\" (UID: \"906edd533192a4db2396a938662a5271\") " pod="kube-system/etcd-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275543    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/6580cebb2d04c6c59385cf58e278b0a6-etc-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"6580cebb2d04c6c59385cf58e278b0a6\") " pod="kube-system/kube-apiserver-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275557    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/b4f7419eaf4a6f0ee6121d47723a0c8d-k8s-certs\") pod \"kube-controller-manager-minikube\" (UID: \"b4f7419eaf4a6f0ee6121d47723a0c8d\") " pod="kube-system/kube-controller-manager-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275567    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/bab0508344d11c6fdb45b1f91c440ff5-kubeconfig\") pod \"kube-scheduler-minikube\" (UID: \"bab0508344d11c6fdb45b1f91c440ff5\") " pod="kube-system/kube-scheduler-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275578    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/b4f7419eaf4a6f0ee6121d47723a0c8d-kubeconfig\") pod \"kube-controller-manager-minikube\" (UID: \"b4f7419eaf4a6f0ee6121d47723a0c8d\") " pod="kube-system/kube-controller-manager-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275629    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/b4f7419eaf4a6f0ee6121d47723a0c8d-usr-local-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"b4f7419eaf4a6f0ee6121d47723a0c8d\") " pod="kube-system/kube-controller-manager-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275673    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/b4f7419eaf4a6f0ee6121d47723a0c8d-usr-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"b4f7419eaf4a6f0ee6121d47723a0c8d\") " pod="kube-system/kube-controller-manager-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.275702    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/6580cebb2d04c6c59385cf58e278b0a6-k8s-certs\") pod \"kube-apiserver-minikube\" (UID: \"6580cebb2d04c6c59385cf58e278b0a6\") " pod="kube-system/kube-apiserver-minikube"
Jul 05 03:59:06 minikube kubelet[1838]: I0705 03:59:06.960834    1838 apiserver.go:52] "Watching apiserver"
Jul 05 03:59:07 minikube kubelet[1838]: I0705 03:59:07.181957    1838 reconciler.go:157] "Reconciler: start to sync state"
Jul 05 03:59:07 minikube kubelet[1838]: E0705 03:59:07.569397    1838 kubelet.go:1690] "Failed creating a mirror pod for" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
Jul 05 03:59:07 minikube kubelet[1838]: E0705 03:59:07.769127    1838 kubelet.go:1690] "Failed creating a mirror pod for" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
Jul 05 03:59:07 minikube kubelet[1838]: E0705 03:59:07.979998    1838 kubelet.go:1690] "Failed creating a mirror pod for" err="pods \"kube-controller-manager-minikube\" already exists" pod="kube-system/kube-controller-manager-minikube"
Jul 05 03:59:08 minikube kubelet[1838]: I0705 03:59:08.161765    1838 request.go:601] Waited for 1.109200167s due to client-side throttling, not priority and fairness, request: POST:https://control-plane.minikube.internal:8443/api/v1/namespaces/kube-system/pods
Jul 05 03:59:08 minikube kubelet[1838]: E0705 03:59:08.166706    1838 kubelet.go:1690] "Failed creating a mirror pod for" err="pods \"kube-scheduler-minikube\" already exists" pod="kube-system/kube-scheduler-minikube"
Jul 05 03:59:18 minikube kubelet[1838]: I0705 03:59:18.002707    1838 kuberuntime_manager.go:1095] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
Jul 05 03:59:18 minikube kubelet[1838]: I0705 03:59:18.003486    1838 kubelet_network.go:60] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
Jul 05 03:59:18 minikube kubelet[1838]: I0705 03:59:18.888957    1838 topology_manager.go:200] "Topology Admit Handler"
Jul 05 03:59:18 minikube kubelet[1838]: I0705 03:59:18.910869    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/75b5a3e5-2f77-4835-a646-ad061c650a64-kube-proxy\") pod \"kube-proxy-cgw7t\" (UID: \"75b5a3e5-2f77-4835-a646-ad061c650a64\") " pod="kube-system/kube-proxy-cgw7t"
Jul 05 03:59:18 minikube kubelet[1838]: I0705 03:59:18.985550    1838 topology_manager.go:200] "Topology Admit Handler"
Jul 05 03:59:18 minikube kubelet[1838]: I0705 03:59:18.988806    1838 topology_manager.go:200] "Topology Admit Handler"
Jul 05 03:59:19 minikube kubelet[1838]: I0705 03:59:19.011138    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/75b5a3e5-2f77-4835-a646-ad061c650a64-lib-modules\") pod \"kube-proxy-cgw7t\" (UID: \"75b5a3e5-2f77-4835-a646-ad061c650a64\") " pod="kube-system/kube-proxy-cgw7t"
Jul 05 03:59:19 minikube kubelet[1838]: I0705 03:59:19.011172    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-cqh4g\" (UniqueName: \"kubernetes.io/projected/75b5a3e5-2f77-4835-a646-ad061c650a64-kube-api-access-cqh4g\") pod \"kube-proxy-cgw7t\" (UID: \"75b5a3e5-2f77-4835-a646-ad061c650a64\") " pod="kube-system/kube-proxy-cgw7t"
Jul 05 03:59:19 minikube kubelet[1838]: I0705 03:59:19.011191    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/75b5a3e5-2f77-4835-a646-ad061c650a64-xtables-lock\") pod \"kube-proxy-cgw7t\" (UID: \"75b5a3e5-2f77-4835-a646-ad061c650a64\") " pod="kube-system/kube-proxy-cgw7t"
Jul 05 03:59:19 minikube kubelet[1838]: I0705 03:59:19.112142    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-8vq2q\" (UniqueName: \"kubernetes.io/projected/dd8994e3-1d05-4df6-a806-6e31491b6154-kube-api-access-8vq2q\") pod \"coredns-6d4b75cb6d-8bsg6\" (UID: \"dd8994e3-1d05-4df6-a806-6e31491b6154\") " pod="kube-system/coredns-6d4b75cb6d-8bsg6"
Jul 05 03:59:19 minikube kubelet[1838]: I0705 03:59:19.112239    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/38464f6c-9a9a-48fd-be84-5d7d369c71e1-config-volume\") pod \"coredns-6d4b75cb6d-4lrgq\" (UID: \"38464f6c-9a9a-48fd-be84-5d7d369c71e1\") " pod="kube-system/coredns-6d4b75cb6d-4lrgq"
Jul 05 03:59:19 minikube kubelet[1838]: I0705 03:59:19.112257    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-mjfbv\" (UniqueName: \"kubernetes.io/projected/38464f6c-9a9a-48fd-be84-5d7d369c71e1-kube-api-access-mjfbv\") pod \"coredns-6d4b75cb6d-4lrgq\" (UID: \"38464f6c-9a9a-48fd-be84-5d7d369c71e1\") " pod="kube-system/coredns-6d4b75cb6d-4lrgq"
Jul 05 03:59:19 minikube kubelet[1838]: I0705 03:59:19.112289    1838 reconciler.go:270] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/dd8994e3-1d05-4df6-a806-6e31491b6154-config-volume\") pod \"coredns-6d4b75cb6d-8bsg6\" (UID: \"dd8994e3-1d05-4df6-a806-6e31491b6154\") " pod="kube-system/coredns-6d4b75cb6d-8bsg6"
Jul 05 03:59:20 minikube kubelet[1838]: I0705 03:59:20.136026    1838 pod_container_deletor.go:79] "Container not found in pod's containers" containerID="56f45cdb8174feeb3997758dea8b77f63d5d7bcfe7eea1d1843c4c0c331be5e9"
Jul 05 03:59:20 minikube kubelet[1838]: I0705 03:59:20.336252    1838 request.go:601] Waited for 1.122924417s due to client-side throttling, not priority and fairness, request: POST:https://control-plane.minikube.internal:8443/api/v1/namespaces/kube-system/serviceaccounts/coredns/token

