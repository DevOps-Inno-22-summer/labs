apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: app-python
spec:
  serviceName: app-python-service
  replicas: 3
  selector:
    matchLabels:
      app: app-python
  template:
    metadata:
      labels:
        app: app-python
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: secretkey
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            requests:
              memory: "64Mi"
              cpu: "900m"
            limits:
              memory: "128Mi"
              cpu: "1000m"
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: {{ .Values.statefulSet.name }}
              mountPath: /app-python/
      volumes:
        - name: config
          configMap:
            name: app-python-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.statefulSet.name }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.statefulSet.storageSize }}
