apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app-python.fullname" . }}
  labels:
    {{- include "app-python.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "app-python.fullname" . }}-service
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app-python.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app-python.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app-python.serviceAccountName" . }}
      volumes:
         - name: config-volume
           configMap:
             name: {{ include "app-python.fullname" . }}-configmap
         - name: workdir
           emptyDir: { }
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
             - name: SECRET_USERNAME
               valueFrom:
                 secretKeyRef:
                   name: {{ .Values.secrets.name }}
                   key: username
          volumeMounts:
             - name: config-volume
               mountPath: /files/config.json
               subPath: config.json
             - name: {{ .Values.statefulSet.name }}
               mountPath: /app-python/
             - name: workdir
               mountPath: /workdir/
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      initContainers:
      - name: install
        image: busybox:1.28
        command:
          - wget
          - "-O"
          - "/workdir/index.html"
          - http://info.cern.ch
        volumeMounts:
          - name: workdir
            mountPath: "/workdir"
      dnsPolicy: Default

  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.statefulSet.name }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.statefulSet.storageSize }}
